input {
    file {
        type => "cataout"
        path => "/opt/tomcat/logs/catalina.out"
		codec => multiline {
	    	#只要不是以此pattern日期為開頭的，就都把他視為和上一行是同一筆資料，故Exception的at都被視為與上一行是同一筆資料
            pattern => "^(?<Time>%{MONTHDAY}-%{MONTH}-%{YEAR} %{TIME})"
            negate => true
            what => "previous"

			#當match到的多行沒有新的資料加入時，將會把累積的多行轉換成新事件，以避免不會讀最後一行
			#auto_flush_interval參數說明 https://bit.ly/2VlaAnl
			#不會讀最後一行的討論 https://bit.ly/2SqIc19
			auto_flush_interval => 1
        }
    }
    file {
        type => "lochost"
        path => "/opt/tomcat/logs/localhost.*"
		codec => multiline {
	    	#只要不是以此pattern日期為開頭的，就都把他視為和上一行是同一筆資料，故Exception的at都被視為與上一行是同一筆資料
            pattern => "^(?<Time>%{MONTHDAY}-%{MONTH}-%{YEAR} %{TIME})"
            negate => true
            what => "previous"
			auto_flush_interval => 1
        }
    }
    file {
        type => "tomacc"
        path => "/opt/tomcat/logs/localhost_access_log*"
    }
}
filter {
    if [type] == "cataout" {
        grok {
            patterns_dir => ["/etc/logstash/pattern/java"]
            match => { "message" => "(?<Time>%{MONTHDAY}-%{MONTH}-%{YEAR} %{TIME}) %{LOGLEVEL:LogLevel} \[%{DATA:RequestThreadName}\] %{JAVACLASS:Class}\.%{JAVAMETHOD:Method} (?<Message>[^\r\n]+)((\r?\n)(?<Extra>(.|\r?\n)+))?" }
            named_captures_only => true
	}
        date {
            match => [ "timestamp" , "yyyy/MMM/dd HH:mm:ss:SSS ZZZ" ]
            timezone => "Asia/Taipei"
        }
    }
    if [type] == "lochost"{
        grok {
            patterns_dir => ["/etc/logstash/pattern/java"]
            match => { "message" => "(?<Time>%{MONTHDAY}-%{MONTH}-%{YEAR} %{TIME}) %{LOGLEVEL:LogLevel} \[%{DATA:RequestThreadName}\] %{JAVACLASS:Class}\.%{JAVAMETHOD:Method} (?<Message>[^\r\n]+)((\r?\n)(?<Extra>(.|\r?\n)+))?" }
        named_captures_only => true
	}
        date {
            match => [ "timestamp" , "yyyy/MMM/dd HH:mm:ss:SSS ZZZ" ]
            timezone => "Asia/Taipei"
        }
    }
    if [type] == "tomacc"{
        grok {
            match => { "message" => "%{COMMONAPACHELOG}" }
            named_captures_only => true
	    }
        date {
            match => [ "timestamp" , "yyyy/MMM/dd HH:mm:ss:SSS ZZZ" ]
            timezone => "Asia/Taipei"
        }
    }
}
output {
    if [type] == "tomacc"{
        elasticsearch {
           hosts => ["192.168.2.103:9200"]
           index => "tomcat-access-log-%{+YYYY.MM.dd}"
        }
    }
    else{
        elasticsearch {
           hosts => ["192.168.2.103:9200"]
           index => "tomcat-log-%{+YYYY.MM.dd}"
        }
    }
    #if [type] == "cataout"{
    #    stdout { codec => rubydebug }
    #}
    #if [type] == "lochost"{
    #    stdout { codec => rubydebug }
    #}
}